package GUIQytetet;

import modeloqytetet.*;
import java.util.ArrayList;
import javax.swing.*;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ControladorQytetet extends javax.swing.JFrame {
    modeloqytetet.Qytetet modeloQytetet;

    // --------------------------- Constructor --------------------------------- 
    public ControladorQytetet() {
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vistaQytetet = new GUIQytetet.VistaQytetet();
        jbSalirCarcelDado = new javax.swing.JButton();
        jbSalirCarcelPagando = new javax.swing.JButton();
        jbJugar = new javax.swing.JButton();
        jbComprarPropiedad = new javax.swing.JButton();
        jbAplicarSorpresa = new javax.swing.JButton();
        jbSiguienteJugador = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbSalirCarcelDado.setText("Salir Cárcel Dado");
        jbSalirCarcelDado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirCarcelDadoActionPerformed(evt);
            }
        });

        jbSalirCarcelPagando.setText("Salir Cárcel Pagando");
        jbSalirCarcelPagando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirCarcelPagandoActionPerformed(evt);
            }
        });

        jbJugar.setText("Jugar");
        jbJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbJugarActionPerformed(evt);
            }
        });

        jbComprarPropiedad.setText("Comprar Propiedad");
        jbComprarPropiedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbComprarPropiedadActionPerformed(evt);
            }
        });

        jbAplicarSorpresa.setText("Aplicar Sorpresa");
        jbAplicarSorpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAplicarSorpresaActionPerformed(evt);
            }
        });

        jbSiguienteJugador.setText("Siguiente Jugador");
        jbSiguienteJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSiguienteJugadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbSalirCarcelPagando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbSalirCarcelDado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbJugar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbComprarPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAplicarSorpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbSiguienteJugador, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(vistaQytetet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(vistaQytetet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbJugar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbComprarPropiedad)
                        .addComponent(jbAplicarSorpresa)
                        .addComponent(jbSiguienteJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbSalirCarcelDado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSalirCarcelPagando)))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // --------------------------- Botones ------------------------------------- 
    // Aplicar Sorpresa
    // Habría que mostrar, y hacer espera por si quiere comprar
    private void jbAplicarSorpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAplicarSorpresaActionPerformed
        // Se da por hecho que no está encarcelado (se habría deshabilitado el botón)
        boolean noTienePropietario = modeloQytetet.aplicarSorpresa();
        Jugador jugador = modeloQytetet.getJugadorActual();
        
        // Mostramos la carta que le ha tocado
        Sorpresa carta = modeloQytetet.getCartaActual();
        this.vistaQytetet.mostarCarta(carta.toString());

        if (!jugador.getEncarcelado() && (jugador.getSaldo() > 0)) {
           if (noTienePropietario && (jugador.getCasillaActual().getTipo() == TipoCasilla.CALLE))
                this.jbComprarPropiedad.setEnabled(true);
        }
             
        this.jbAplicarSorpresa.setEnabled(false);
        this.vistaQytetet.actualizar(modeloQytetet);         
    }//GEN-LAST:event_jbAplicarSorpresaActionPerformed
    
    // Salir Carcel Dado
    private void jbSalirCarcelDadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirCarcelDadoActionPerformed
        boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.TIRANDODADO);
        this.jbSalirCarcelPagando.setEnabled(false);    // Los pondrá a true si está encarcelado
        this.jbSalirCarcelDado.setEnabled(false);
        
        if (!resultado) {
            JOptionPane.showMessageDialog(this, "Sales de la cárcel :D");
            this.jbJugar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "NO sales de la carcel :(");
            this.jbSiguienteJugador.setEnabled(true);
        }
        
        this.vistaQytetet.actualizar(modeloQytetet); 
    }//GEN-LAST:event_jbSalirCarcelDadoActionPerformed

    // Salir Carcel Pagando
    private void jbSalirCarcelPagandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirCarcelPagandoActionPerformed
        boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.PAGANDOLIBERTAD);
        this.jbSalirCarcelPagando.setEnabled(false);
        this.jbSalirCarcelDado.setEnabled(false);
        
        if (!resultado) {
            JOptionPane.showMessageDialog(this, "Sales de la cárcel :D");
            this.jbJugar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "NO sales de la carcel :(");
            this.jbSiguienteJugador.setEnabled(true);
        }
        
        this.vistaQytetet.actualizar(modeloQytetet);        
    }//GEN-LAST:event_jbSalirCarcelPagandoActionPerformed

    // Jugar
    private void jbJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbJugarActionPerformed
        Boolean noTienePropietario = !modeloQytetet.jugar();
        Jugador jugador = modeloQytetet.getJugadorActual();
                       
        switch (jugador.getCasillaActual().getTipo()) {
            case SORPRESA:
                this.jbAplicarSorpresa.setEnabled(true);        
                break;
            case CALLE:
                if (noTienePropietario) {
                    this.jbComprarPropiedad.setEnabled(true);
                }
                break;
        }
               
        this.jbJugar.setEnabled(false);        
        this.jbSiguienteJugador.setEnabled(true);        
        this.vistaQytetet.actualizar(modeloQytetet);   
    }//GEN-LAST:event_jbJugarActionPerformed

    // Comprar Propiedad
    private void jbComprarPropiedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbComprarPropiedadActionPerformed
        modeloQytetet.comprarTituloPropiedad();
        
        this.jbComprarPropiedad.setEnabled(false);
        this.vistaQytetet.actualizar(modeloQytetet);                  
    }//GEN-LAST:event_jbComprarPropiedadActionPerformed

    // Siguiente Jugador
    private void jbSiguienteJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSiguienteJugadorActionPerformed
        if (modeloQytetet.getJugadorActual().getSaldo() <= 0)
            this.fin();
        
        modeloQytetet = modeloqytetet.Qytetet.getInstance();
        modeloQytetet.siguienteJugador();
        
        // Limpiamos la carta que hubiese
        this.vistaQytetet.mostarCarta("");
        
        habilitarComenzarTurno();
        
        this.vistaQytetet.actualizar(modeloQytetet);    
    }//GEN-LAST:event_jbSiguienteJugadorActionPerformed
    
    // ------------------------- Actualizar ------------------------------------     
    public void actualizar(modeloqytetet.Qytetet qytetet) {
        this.modeloQytetet = qytetet;        
        
        habilitarComenzarTurno();
        
        vistaQytetet.actualizar(qytetet);
    }
    
    public void habilitarComenzarTurno(){
        this.jbComprarPropiedad.setEnabled(false);
        this.jbSiguienteJugador.setEnabled(false);
        this.jbAplicarSorpresa.setEnabled(false);
        
        if (modeloQytetet.getJugadorActual().getEncarcelado()){
            this.jbSalirCarcelPagando.setEnabled(true);
            this.jbSalirCarcelDado.setEnabled(true);
        }
        else {
            this.jbSalirCarcelPagando.setEnabled(false);
            this.jbSalirCarcelDado.setEnabled(false);
            this.jbJugar.setEnabled(true);
        }
    }
    
    // ----------------------------- Main --------------------------------------     
    public static void main(String args[]) {
        ControladorQytetet controladorQytetet = new ControladorQytetet();
        
        // Pidiendo los nombres y añadiéndolos al juego
        CapturaNombreJugadores capturaNombres = new CapturaNombreJugadores(controladorQytetet, true);
        ArrayList<String> nombres = capturaNombres.obtenerNombres();
        modeloqytetet.Qytetet qytetet = modeloqytetet.Qytetet.getInstance();
        // Creando el dado sobre la ventana que se le pasa como argumento
        Dado.createInstance(controladorQytetet);
                
        
        qytetet.inicializarJuego(nombres);
        
        controladorQytetet.actualizar(qytetet);               
        controladorQytetet.setVisible(true);              
    }
    
    public void fin() {
        String res = new String();
        res = "Clasificación\n";
        ArrayList<Jugador> ranking = this.modeloQytetet.obtenerRanking();

        
        // Desabilitamos los otros botones
        this.jbComprarPropiedad.setEnabled(false);
        this.jbSiguienteJugador.setEnabled(false);
        this.jbAplicarSorpresa.setEnabled(false);
        this.jbSalirCarcelPagando.setEnabled(false);
        this.jbSalirCarcelDado.setEnabled(false);
        this.jbJugar.setEnabled(true); 
                               
        cont.setLayout(new FlowLayout());        
                  
        for (int i = 0; i < ranking.size(); i++) {
            JLabel etiqueta = new JLabel(Integer.toString(i+1)             + "º - "
                        + ranking.get(i).getNombre()  + " - "
                        + ranking.get(i).obtenerCapital() + "\n");   
            cont.add(etiqueta);
        }
        
        cont.add(salir);
        salir();
        
        // Tamaño
        ventana.setSize( 300,300);
        ventana.setLocationRelativeTo(null);
        ventana.setVisible( true );               
    }  
    
    // Mata el programa
    public void salir() {
        
        ActionListener al = new ActionListener() {            
            @Override
            public void actionPerformed( ActionEvent evento ) {
                System.exit(0);                
            }
        };
        salir.addActionListener( al );
        
    }
    
    //Creamos una nueva ventana con el ranking
    JFrame ventana = new JFrame("Ranking");         
    Container cont = ventana.getContentPane();
    JButton salir = new JButton("Salir");
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbAplicarSorpresa;
    private javax.swing.JButton jbComprarPropiedad;
    private javax.swing.JButton jbJugar;
    private javax.swing.JButton jbSalirCarcelDado;
    private javax.swing.JButton jbSalirCarcelPagando;
    private javax.swing.JButton jbSiguienteJugador;
    private GUIQytetet.VistaQytetet vistaQytetet;
    // End of variables declaration//GEN-END:variables
}
