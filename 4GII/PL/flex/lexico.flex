/*-----------Declaraciones---------------------------------------------------------------*/
%{
  #include "y.tab.h"
%}

%option noyywrap
%option yylineno

%%
  /*-----------------Reglas--------------------------------------------------------------*/

  /*-------Carácteres ignorados--------------*/

(\t|" ")     { /* Ignorar espacios */ }

"//".*    { /* Ignorar comentarios de una línea */ }

"/*"([^*]|\*+[^*/])*\*+"/"      { /* Ignorar comentarios multilínea */ }

  /*-------Reconocimiento de tokens----------*/


  /* ------------------------------------------------------------------------------------ */

"true"    { yylval.atrib = 0;
            return CONSTANTE;
          }

"false"   { yylval.atrib = 1;
            return CONSTANTE;
          }

\'[^\']*\'    { yylval.atrib = 2;
                return CONSTANTE;
              }

[0-9]+("."[0-9]+)?     {  yylval.atrib = 3;
                          return CONSTANTE;
                        }

  /* ------------------------------------------------------------------------------------ */

"@"   {         
        return OP_TERNARIODOSBINARIO;
      }

  /* ------------------------------------------------------------------------------------ */

"!"   { yylval.atrib = 0;
        return OP_UNARIO;
      }

"#"   { yylval.atrib = 1;
        return OP_UNARIO;
      }

"?"   { yylval.atrib = 2;
        return OP_UNARIO;
      }

  /* ------------------------------------------------------------------------------------ */

"+"   { yylval.atrib = 0;
        return OP_ADITIVO;
      }

"-"   { yylval.atrib = 1;
        return OP_ADITIVO;
      }      

  /* ------------------------------------------------------------------------------------ */

"/"   { yylval.atrib = 0;
        return OP_MULTIPLICATIVO;
      }

"*"   { yylval.atrib = 1;
        return OP_MULTIPLICATIVO;
      }

"%"   { yylval.atrib = 2;
        return OP_MULTIPLICATIVO;
      }

  /* ------------------------------------------------------------------------------------ */

"<"   { yylval.atrib = 0;
        return OP_RELACION;
      }

">"   { yylval.atrib = 1;
        return OP_RELACION;
      }

"<="  { yylval.atrib = 2;
        return OP_RELACION;
      }

">="  { yylval.atrib = 3;
        return OP_RELACION;
      }

  /* ------------------------------------------------------------------------------------ */

"=="  { yylval.atrib = 0;
        return OP_IGUALDAD;
      }

"!="  { yylval.atrib = 1;
        return OP_IGUALDAD;
      }

  /* ------------------------------------------------------------------------------------ */

"&&"  {         
        return OP_AND;
      }

  /* ------------------------------------------------------------------------------------ */

"||"  {         
        return OP_OR;
      }

  /* ------------------------------------------------------------------------------------ */

"^"   {         
        return OP_EXOR;
      }

  /* ------------------------------------------------------------------------------------ */

"--"  { yylval.atrib = 0;
        return OP_BINARIO;
      }

"**"  { yylval.atrib = 1;
        return OP_BINARIO;
      }

  /* ------------------------------------------------------------------------------------ */

"++"    {           
          return OP_TERNARIOUNO;
        }

  /* ------------------------------------------------------------------------------------ */

";"   {         
        return PYC;
      }

  /* ------------------------------------------------------------------------------------ */

"["   {         
        return CORIZQ;
      }

  /* ------------------------------------------------------------------------------------ */

"]"   {         
        return CORDCH;
      }

  /* ------------------------------------------------------------------------------------ */

")"   {         
        return PARDCH;
      }

  /* ------------------------------------------------------------------------------------ */

"("   {         
        return PARIZQ;
      }

  /* ------------------------------------------------------------------------------------ */

"{"   {         
        return LLAVEIZQ;
      }

  /* ------------------------------------------------------------------------------------ */

"}"   {         
        return LLAVEDCH;
      }

  /* ------------------------------------------------------------------------------------ */

"scanf"   {             
            return SCANF;
          }

  /* ------------------------------------------------------------------------------------ */

"print"   {             
            return PRINT;
          }

  /* ------------------------------------------------------------------------------------ */

"<<"  { yylval.atrib = 0;
        return AVANRETRO;
      }

">>"   { yylval.atrib = 1;
         return AVANRETRO;
       }

  /* ------------------------------------------------------------------------------------ */

"switch"    {               
              return SWITCH;
            }

  /* ------------------------------------------------------------------------------------ */

"break"   {             
            return BREAK;
          }

  /* ------------------------------------------------------------------------------------ */

"case"    {             
            return CASE;
          }

  /* ------------------------------------------------------------------------------------ */

"default"   {               
              return DEFAULT;
            }

  /* ------------------------------------------------------------------------------------ */

"int"   { yylval.atrib = 0;
          return TIPO;
        }

"char"    { yylval.atrib = 1;
            return TIPO;
          }

"bool"    { yylval.atrib = 2;
            return TIPO;
          }

"float"   { yylval.atrib = 3;
            return TIPO;
          }

  /* ------------------------------------------------------------------------------------ */

"="     {           
          return ASIGN;
        }

  /* ------------------------------------------------------------------------------------ */

("listof"|"list of")    {                           
                          return LISTOF;
                        }

  /* ------------------------------------------------------------------------------------ */

"return"  { yylval.atrib = 0;
            return RETURNCOMIENZO;
          }

"$"    { yylval.atrib = 1;
         return RETURNCOMIENZO;
       }

  /* ------------------------------------------------------------------------------------ */

"else"    {             
            return ELSE;
          }

  /* ------------------------------------------------------------------------------------ */

"if"    {           
          return IF;
        }

  /* ------------------------------------------------------------------------------------ */

"while"   {             
            return WHILE;
          }

  /* ------------------------------------------------------------------------------------ */

"main"    {           
          return MAIN;
        }

  /* ------------------------------------------------------------------------------------ */

"Variables"   {                 
                return VARIABLES;
              }    

  /* ------------------------------------------------------------------------------------ */

","   {         
        return COMA;
      }

  /* ------------------------------------------------------------------------------------ */

\"[^\"]*\"    {                 
                return CADENA;
              }

  /* ------------------------------------------------------------------------------------ */

("_"[a-zA-Z0-9]+)   { yylval.lexema = strdup(yytext);
                      return IDENTIFICADOR;
                    }  

([a-zA-Z][a-zA-Z0-9]*)    { yylval.lexema = strdup(yytext);     
                            return IDENTIFICADOR;
                          }  
                                                

  /* ------------------------------------------------------------------------------------ */

":"   {         
        return PUNTO2;
      }

	/*--------------------------------------------------------*/

("\r\n"|"\n")    ++linea_actual;

  /*--------------------------------------------------------*/

.				{
           printf("[Línea %d]: [Error Lexico] Caracter no identificado: %s\n", yylineno, yytext);
        }   
        
<<EOF>>			{ 
              printf("\n\nFin del análisis léxico\n"); 		
				      return 0;
				    }  
%%
	/*-----------Procedimientos----------------*/